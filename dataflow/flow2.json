{
	"name": "flow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "testt1",
						"type": "DatasetReference"
					},
					"name": "test1"
				},
				{
					"dataset": {
						"referenceName": "test3",
						"type": "DatasetReference"
					},
					"name": "test3"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Union1"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "source(output(\n\t\tID as short,\n\t\tvoornaam as string,\n\t\tachternaam as string,\n\t\tgeboortedatum as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> test1\nsource(output(\n\t\tID as short,\n\t\tvoornaam as string,\n\t\tachternaam as string,\n\t\tgeboortedatum as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> test3\ntest1, test3 union(byName: true)~> Union1\nUnion1 aggregate(groupBy(achternaam),\n\teach(match(name !='achternaam'), $$ = first($$))) ~> Aggregate1"
		}
	}
}