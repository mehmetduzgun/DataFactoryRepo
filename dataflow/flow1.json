{
	"name": "flow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "test3",
						"type": "DatasetReference"
					},
					"name": "test1"
				},
				{
					"dataset": {
						"referenceName": "dbtest1",
						"type": "DatasetReference"
					},
					"name": "test3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dbtest1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Exists1"
				}
			],
			"script": "source(output(\n\t\tID as string,\n\t\tvoornaam as string,\n\t\tachternaam as string,\n\t\tgeboortedatum as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> test1\nsource(output(\n\t\tID as string,\n\t\tvoornaam as string,\n\t\tachternaam as string,\n\t\tgeboortedatum as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> test3\ntest1, test3 exists(test1@voornaam == test3@voornaam,\n\tnegate:true,\n\tbroadcast: 'right')~> Exists1\nExists1 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}